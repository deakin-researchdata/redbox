#macro (_ $value)
#if ("$!value" != "")#if ("$!value" != "Not Applicable")#if ("$!value" != "N/A")$value#end#end#end
#end

#set($dateFormat = "yyyy-MM-dd")
 
#set ($langUri = $util.get($item, "dc:language.dc:identifier"))
#if ("$!langUri" != "")
    #set($lastIndex = $langUri.lastIndexOf('/') + 1 )
    #set($lang = $langUri.substring($lastIndex) )
#else
    #set($lang = "eng")
#end


<mods:mods xmlns:dudro="http://www.deakin.edu.au/dro/schema.xsd" xmlns:mods="http://www.loc.gov/mods/v3" xmlns:xsi="http://www.w3.org/2001/XMLSchema">
	## TITLE
	## ReDBox gives only 1 name to the dataset
	<mods:titleInfo>
		<mods:title>#_($util.encodeXml($util.get($item, 'dc:title')).replaceAll("\n", " "))</mods:title>
	</mods:titleInfo>

	## CREATOR
	#set($valueMap = $util.getList($item, "dc:creator.foaf:Person"))
	#foreach($key in $valueMap.keySet())
    #set($node=$valueMap.get($key))

    #set ($nameID = $node.get("du:authorId"))
    #set ($uri = $node.get("dc:identifier"))

    ### Get NLA ID
    #set($valueList = $item.getJsonSimpleList("relationships"))
    #if($valueList)
        #set($nlaid = "")
        #set($nla_number = "")
        #foreach($value in $valueList)
            #if ($value.getBoolean(false, "isCurated"))
                #set($rid = $value.getString("empty", "identifier"))
                #if ("$!uri" == "$!rid")
                    #set($nlaid = $value.getString("empty", "curatedPid"))
                    #set($lastIndex = $nlaid.lastIndexOf('-') + 1 )
                    #set($nla_number = $nlaid.substring($lastIndex) )
                #end
            #end
        #end
    #end


	<mods:name ID="#_($nameID)" authority="Deakin University" type="#_($util.encodeXml($nla_number))">
		<mods:namePart type="personal">#_($util.encodeXml($node.get("foaf:name")))</mods:namePart>
		#set($affiliation = $node.get("foaf:Organization.skos:prefLabel"))
		#if($affiliation)
		<mods:affiliation>#_($util.encodeXml($affiliation))</mods:affiliation>
		#end
		<mods:role>
			<mods:roleTerm type="text">author</mods:roleTerm>
		</mods:role>

        #if( $node.get("redbox:isPrimaryInvestigator") == "on")
        <mods:displayForm>chief investigator</mods:displayForm>
        #else
        <mods:displayForm>author</mods:displayForm>
        #end
	</mods:name>
    #end



    ## SUPERVISOR
	#set($valueMap = $util.getList($item, "swrc:supervisor.foaf:Person"))
	#foreach($key in $valueMap.keySet())
    #set($node=$valueMap.get($key))

    #set ($nameID = $node.get("du:authorId"))
    #set ($uri = $node.get("dc:identifier"))
 
    ### Get NLA ID
    #set($valueList = $item.getJsonSimpleList("relationships"))
    #if($valueList)
        #set($nlaid = "")
        #set($nla_number = "")
        #foreach($value in $valueList)
            #if ($value.getBoolean(false, "isCurated"))
                #set($rid = $value.getString("empty", "identifier"))
                #if ("$!uri" == "$!rid")
                    #set($nlaid = $value.getString("empty", "curatedPid"))
                    #set($lastIndex = $nlaid.lastIndexOf('-') + 1 )
                    #set($nla_number = $nlaid.substring($lastIndex) )
                #end
            #end
        #end
    #end



	<mods:name ID="#_($nameID)" authority="Deakin University" type="#_($util.encodeXml($nla_number))">
		<mods:namePart type="personal">#_($util.encodeXml($node.get("foaf:name")))</mods:namePart>
		#set($affiliation = $node.get("foaf:Organization.skos:prefLabel"))
		#if($affiliation)
		<mods:affiliation>#_($util.encodeXml($affiliation))</mods:affiliation>
		#end
		<mods:role>
			<mods:roleTerm type="text">editor</mods:roleTerm>
		</mods:role>
        <mods:displayForm>supervisor</mods:displayForm>
	</mods:name>
    #end

 

    ## Collaborators
	#set($valueMap = $util.getList($item, "dc:contributor.locrel:clb"))
	#foreach($key in $valueMap.keySet())
    #set($node=$valueMap.get($key))
		#set($affiliation = $node.get("foaf:Agent"))
		#if("$!affiliation" != "")
        <mods:name>
            <mods:namePart type="corporate">#_($util.encodeXml($affiliation))</mods:namePart>
            <mods:displayForm>collaborator</mods:displayForm>
            <mods:role>
                <mods:roleTerm type="text">associated name</mods:roleTerm>
            </mods:role>
        </mods:name>
		#end
    #end



    ## DRO requires this to be hardcoded
	<mods:typeOfResource>dataset</mods:typeOfResource>
	<mods:genre authority="ands">#_($util.get($item, 'dc:type.rdf:PlainLiteral'))</mods:genre>

	<mods:originInfo>

        ## No publisher extracted from ReDBox
		## <mods:publisher></mods:publisher>

        ## No publish date extracted from ReDBox
		## <mods:dateIssued></mods:dateIssued>

        ## No Copy right date extracted
		## <mods:copyrightDate>></mods:copyrightDate>

		<mods:dateIssued>#_($util.getDateTime($util.get($item, 'dc:created'), $dateFormat))</mods:dateIssued>

        ## No data valid date from ReDBox
		## <mods:dateValid point="start"></mods:dateValid>
		## <mods:dateValid point="end"></mods:dateValid>

        ## Data Coverage Dates
		<mods:dateValid point="start">#_($util.getDateTime($util.get($item, 'dc:coverage.vivo:DateTimeInterval.vivo:start'), $dateFormat))</mods:dateValid>
		<mods:dateValid point="end">#_($util.getDateTime($util.get($item, 'dc:coverage.vivo:DateTimeInterval.vivo:end'), $dateFormat))</mods:dateValid>
		#if ($util.get($item, 'redbox:disposalDate'))
		<mods:dateOther>#_($util.getDateTime($util.get($item, 'redbox:disposalDate'), $dateFormat))</mods:dateOther>
        #end
	</mods:originInfo>
 
    <mods:language>
        <mods:languageTerm authority="iso639-2b" type="code">#_($lang)</mods:languageTerm>
    </mods:language>


    #set($abstract = $util.encodeXml($util.get($item, 'dc:description')))
    <mods:abstract>#_($abstract)</mods:abstract>

    <mods:physicalDescription>
        <mods:extent>
        #if ($util.get($item, 'dc:extent'))
        #_($util.encodeXml($util.get($item, 'dc:extent')))
        #end
        </mods:extent>
    </mods:physicalDescription>

    ## KEYWORDS
    #set($valueMap = $util.getList($item, "dc:subject.vivo:keyword"))
    #foreach($key in $valueMap.keySet())
    <mods:subject  authority="keyword">
        <mods:topic>#_($util.encodeXml($valueMap.get($key).get('rdf:PlainLiteral')))</mods:topic>
    </mods:subject>
    #end

    ## FOR CODES
    #set($valueMap = $util.getList($item, "dc:subject.anzsrc:for"))
    #foreach($key in $valueMap.keySet())
    <mods:subject  authority="anzsrc">
        #set($anzsrc = $valueMap.get($key).get('skos:prefLabel').replaceFirst(' - '," "))
        <mods:topic>#_($util.encodeXml($anzsrc))</mods:topic>
    </mods:subject>
    #end

    ## SEO CODE
    ## DRO supports only 1 instance
    #if ($util.get($item, 'dc:subject.anzsrc:seo.1.skos:prefLabel'))
    <mods:subject  authority="anzsrcseo">
        #set($anzsrcseo = $util.get($item, 'dc:subject.anzsrc:seo.1.skos:prefLabel').replaceFirst(' - '," "))
        <mods:topic>#_($util.encodeXml($anzsrcseo))</mods:topic>
    </mods:subject>
    #end

    ## TOA CODE (Type of Research Activity)
    #set($anzsrctoa = $util.get($item, 'dc:subject.anzsrc:toa.skos:prefLabel'))
    #if ("$!anzsrctoa" != "")
    <mods:subject  authority="anzsrctoa">
        <mods:topic>#_($util.encodeXml($anzsrctoa))</mods:topic>
    </mods:subject>
    #end

    ## No classification info

    ## Related Publications 
    <mods:relatedItem type="series">
    <mods:location>

    #set($valueMap = $util.getList($item, "dc:relation.swrc:Publication"))
    #foreach($key in $valueMap.keySet())
    #set( $label = $valueMap.get($key).get('dc:title'))
    #if( "$!label" != "")
        <mods:url displayLabel="#_($util.encodeXml($valueMap.get($key).get('dc:title')))">#_($util.encodeXml($valueMap.get($key).get('dc:identifier')))</mods:url>
    #end
    #end

    ## Related Website 
    #set($valueMap = $util.getList($item, "dc:relation.bibo:Website"))
    #foreach($key in $valueMap.keySet())
    #set( $label = $valueMap.get($key).get('dc:title'))
    #if( "$!label" != "")
        <mods:url displayLabel="#_($util.encodeXml($valueMap.get($key).get('dc:title')))">#_($util.encodeXml($valueMap.get($key).get('dc:identifier')))</mods:url>
    #end
    #end

    ## Related Data 
    #set($valueMap = $util.getList($item, "dc:relation.vivo:Dataset"))
    #foreach($key in $valueMap.keySet())
    #set( $label = $valueMap.get($key).get('dc:title'))
    #if( "$!label" != "")
        <mods:url displayLabel="#_($util.encodeXml($valueMap.get($key).get('dc:title')))">#_($util.encodeXml($valueMap.get($key).get('dc:identifier')))</mods:url>
    #end
    #end
  
    ## Related Service 
    #set($valueMap = $util.getList($item, "dc:relation.vivo:Service"))
    #foreach($key in $valueMap.keySet())
    #set( $label = $valueMap.get($key).get('dc:title'))
    #if( "$!label" != "")
        <mods:url displayLabel="#_($util.encodeXml($valueMap.get($key).get('dc:title')))">#_($util.encodeXml($valueMap.get($key).get('dc:identifier')))</mods:url>
    #end
    #end


    </mods:location>

    ## Grants Data 
    #set($valueMap = $util.getList($item, "foaf:fundedBy.vivo:Grant"))
    #foreach($key in $valueMap.keySet())
    #set($grant_url = $valueMap.get($key).get("dc:identifier") )
        #if ($grant_url.contains('purl') == false)
            #set($grant_url = $valueMap.get($key).get("du:url") )
        #end
        #if ($grant_url.contains('purl'))
            #if ($grant_url.toLowerCase().contains('arc'))
                #set($grant_prefix = "ARC")
            #end
            #if ($grant_url.toLowerCase().contains('nhmrc'))
                #set($grant_prefix = "NHMRC")
            #end
            #set($lastIndex = $grant_url.lastIndexOf('/') + 1 )
            #set($grant_number = $grant_url.substring($lastIndex) )
            <mods:identifier type="grant_id">#_($util.encodeXml($grant_prefix)) #_($util.encodeXml($grant_number))</mods:identifier>
        #else
            #set($grant_number = $valueMap.get($key).get("redbox:grantNumber") )
            #if ("$!grant_number" != "")
            #if ("$!grant_url" != "")
            <mods:identifier type="grant_id">DR #_($util.encodeXml($grant_number)) (#_($util.encodeXml($grant_url)))</mods:identifier>
            #end
            #end
        #end
    #end
    </mods:relatedItem>

    ## Output DOI as an identifier
    #set($showCitation = $util.get($item, "dc:biblioGraphicCitation.redbox:sendCitation"))
    #if ("$!showCitation" != "" && $showCitation == "on")
        #set($doiProperty = $systemConfig.getString($defaultOnError, "andsDoi", "doiProperty"))
        #set ($doi = $util.getMetadata($object, $doiProperty))
        ## Use the DOI by preference for a citation
        #if ("$!doi" != "")
            #set ($citeId = "http://dx.doi.org/${doi}")
            #set ($citeIdType = "doi")
            <!--
            <mods:relatedItem type="series">
            <mods:location>
                <mods:url displayLabel="DOI text">$util.encodeXml($citeId)</mods:url> 
            </mods:location>
            </mods:relatedItem>
            -->
            <mods:identifier type="doi">$util.encodeXml($doi)</mods:identifier>
        #end
    #end

    #set($showCitation = $util.get($item, "dc:biblioGraphicCitation.redbox:sendCitation"))
    #if ("$!showCitation" != "" && $showCitation == "on")
        #set($doiProperty = $systemConfig.getString($defaultOnError, "andsDoi", "doiProperty"))
        #set ($doi = $util.getMetadata($object, $doiProperty))
        ## Use the DOI by preference for a citation
        #if ("$!doi" == "")
            #set ($citeId = $identifier)
            #set ($citeIdType = $identifierType)
        #else
            #set ($citeId = "http://dx.doi.org/${doi}")
            #set ($citeIdType = "doi")
        #end
        #set($citationString = $util.get($item, "dc:biblioGraphicCitation.skos:prefLabel"))
        #if ("$!citationString" != "")
        <mods:note type="citation">
            $util.encodeXml($citationString.replaceAll("\{ID_WILL_BE_HERE\}", $citeId))
        </mods:note>
        #end
    #end



    <mods:note type="general">
    ## IDENTIFIER
    #set ($id = $util.get($item, 'dc:identifier.rdf:PlainLiteral')) 
    #if ("$!id" != "")
    IDENTIFIER: #_($util.encodeXml($util.get($item, 'dc:identifier.dc:type.rdf:PlainLiteral'))) | #_($util.encodeXml($id))
    #end

    ## LOCATION
    #set($valueMap = $util.getList($item, "bibo:Website"))
    #foreach($key in $valueMap.keySet())
    #set ($valueLoc = $valueMap.get($key).get('dc:identifier'))
    #if ("$!valueLoc" != "")
    WEBSITE $key: #_($util.encodeXml($valueLoc))
    #end
    #end
 
    ## NOTES
    #set($valueMap = $util.getList($item, "skos:note"))
    #foreach($key in $valueMap.keySet())
    #set ($note = $valueMap.get($key).get('dc:description')) 
    #set ($created = $valueMap.get($key).get('dc:created')) 
    #if ("$!note" != "")
    NOTES $key:
    #_($util.encodeXml($note))
    #if ("$!created" != "")
    [#_($util.encodeXml($created))].
    #end
    #end
    #end

    #set($sizeOrDuration = $util.get($item, 'dc:SizeOrDuration'))
    #if ("$!sizeOrDuration" != "")
    Size_OR_DURATION: #_($util.encodeXml($util.get($item, 'dc:SizeOrDuration'))).
    #end
 
    </mods:note>


    ## GEOGRAPHIC
    #set($valueMap = $util.getList($item, "dc:coverage.vivo:GeographicLocation"))
    #foreach($key in $valueMap.keySet())
    <subject authority="#_($util.encodeXml($valueMap.get($key).get('dc:type')))">
        <geographic>#_($util.encodeXml($valueMap.get($key).get('rdf:PlainLiteral')))</geographic>
    </subject> 
    #end


    <mods:location>
        <mods:physicalLocation>#_($util.encodeXml($util.get($item, 'vivo:Location.vivo:GeographicLocation.gn:name')))</mods:physicalLocation>
    </mods:location>

    ## ACCESS CONDITION
    <mods:accessCondition type="access">#_($util.encodeXml($util.get($item, 'dc:accessRights.skos:prefLabel')))</mods:accessCondition>

    <mods:accessCondition type="notice">#_($util.encodeXml($util.get($item, 'dc:accessRights.dc:RightsStatement.skos:prefLabel')))</mods:accessCondition>
    <mods:accessCondition type="clearance">#_($util.encodeXml($util.get($item, 'dc:license.skos:prefLabel')))</mods:accessCondition>

    <mods:accessCondition type="other_license">#_($util.encodeXml($util.get($item, 'dc:license.rdf:Alt.skos:prefLabel')))</mods:accessCondition>
    <mods:accessCondition type="data_owner">
    ## DATA OWNER
    #set($valueMap = $util.getList($item, "locrel:own.foaf:Agent"))
    #foreach($key in $valueMap.keySet())
    #_($util.encodeXml($valueMap.get($key).get('foaf:name')))
    #end
    </mods:accessCondition>

    <mods:accessCondition type="data_custodian">#_($util.encodeXml($util.get($item, 'locrel:dtm.foaf:Agent.foaf:name')))</mods:accessCondition>
 
    ## Primary Contact
    <mods:extension>
        #if ($util.get($item, 'locrel:prc.foaf:Person.foaf:email'))
        <mods:dudro-contact type="email">
            <mods:dudro-contactDetails>#_($util.encodeXml($util.get($item, 'locrel:prc.foaf:Person.foaf:email')))</mods:dudro-contactDetails>
        </mods:dudro-contact>
        #end
        #if ($util.get($item, 'locrel:prc.foaf:Person.foaf:name'))
        <mods:dudro-contact type="physical">
            <mods:dudro-contactDetails>#_($util.encodeXml($util.get($item, 'locrel:prc.foaf:Person.foaf:name')))</mods:dudro-contactDetails>
        </mods:dudro-contact>
        #end
    </mods:extension>

</mods:mods>

